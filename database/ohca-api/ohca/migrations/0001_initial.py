# Generated by Django 4.0.3 on 2022-03-28 21:34

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Locale',
            fields=[
                ('localID', models.BigAutoField(primary_key=True, serialize=False)),
                ('friendlyName', models.TextField()),
                ('population', models.IntegerField(default=0)),
                ('attendedCAs', models.IntegerField(default=0)),
                ('attemptedResusc', models.IntegerField(default=0)),
                ('casesDNR', models.IntegerField(default=0)),
                ('casesFutile', models.IntegerField(default=0)),
                ('casesCirculation', models.IntegerField(default=0)),
                ('casesUnknown', models.IntegerField(default=0)),
                ('description', models.JSONField(default=dict)),
                ('descriptionSupplemental', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'locales',
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('systemID', models.BigAutoField(primary_key=True, serialize=False)),
                ('friendlyName', models.TextField()),
                ('population', models.IntegerField(default=0)),
                ('attendedCAs', models.IntegerField(default=0)),
                ('attemptedResusc', models.IntegerField(default=0)),
                ('casesDNR', models.IntegerField(default=0)),
                ('casesFutile', models.IntegerField(default=0)),
                ('casesCirculation', models.IntegerField(default=0)),
                ('casesUnknown', models.IntegerField(default=0)),
                ('description', models.JSONField(default=dict)),
                ('descriptionSupplemental', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'systems',
            },
        ),
        migrations.CreateModel(
            name='CaseReport',
            fields=[
                ('caseID', models.CharField(max_length=32, primary_key=True, serialize=False)),
                ('dispIdentifiedCA', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('dispProvidedCPRinst', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('age', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(200)])),
                ('gender', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('witnesses', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(3)])),
                ('location', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(8)])),
                ('bystanderResponse', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(2)])),
                ('bystanderResponseTime', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(-1)])),
                ('bystanderAED', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(2)])),
                ('bystanderAEDTime', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(-1)])),
                ('deadOnArrival', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('firstMonitoredRhy', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('pathogenesis', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(6)])),
                ('independentLiving', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('comorbidities', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('vad', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('cardioverterDefib', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(2)])),
                ('stemiPresent', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('responseTime', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1)])),
                ('defibTime', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1)])),
                ('ttm', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(5)])),
                ('ttmTemp', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(400)])),
                ('drugs', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(7)])),
                ('airwayControl', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(15)])),
                ('cprQuality', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('shocks', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1)])),
                ('drugTimings', models.JSONField(default=dict)),
                ('vascularAccess', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(4)])),
                ('mechanicalCPR', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(3)])),
                ('targetVent', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(3)])),
                ('reperfusionAttempt', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(8)])),
                ('reperfusionTime', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1)])),
                ('ecls', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(2)])),
                ('iabp', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('ph', models.DecimalField(blank=True, decimal_places=3, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(14)])),
                ('lactate', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(-1)])),
                ('glucose', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('neuroprognosticTests', models.JSONField(default=dict)),
                ('specialistHospital', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('hospitalVolume', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1)])),
                ('ecg', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('ecgBLOB', models.FileField(blank=True, null=True, upload_to='')),
                ('targetBP', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(-1)])),
                ('survived', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('rosc', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('roscTime', models.BigIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1)])),
                ('SurvivalDischarge30d', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('cpcDischarge', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(5)])),
                ('mrsDischarge', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(6)])),
                ('survivalStatus', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('transportToHospital', models.SmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('treatmentWithdrawn', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1)])),
                ('cod', models.CharField(blank=True, max_length=6, null=True)),
                ('organDonation', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(-1), django.core.validators.MaxValueValidator(1)])),
                ('patientReportedOutcome', models.SmallIntegerField(blank=True, null=True)),
                ('qualityOfLife', models.JSONField(default=dict)),
                ('localID', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ohca.locale')),
                ('systemID', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='ohca.system')),
            ],
            options={
                'db_table': 'cases',
            },
        ),
    ]
